@page "/movies/create/"

<h1>Create Movie</h1>

@using BlazorApp.Data
@using BlazorApp.Data.Models
@inject MemoryDatabase MemoryDatabase
@inject NavigationManager NavigationManager

<form>
    <div class="form-group">
        <label for="title">Título</label>
        <input type="text" class="form-control" id="title" @bind="currentMovie.Title" />
    </div>
    <div class="form-group">
        <label for="director">Director</label>
        <input type="text" class="form-control" id="director" @bind="currentMovie.Director" />
    </div>
    <div class="form-group">
        <label for="releaseYear">Año de lanzamiento</label>
        <input type="number" class="form-control" id="releaseYear" @bind="currentMovie.ReleaseYear" />
    </div>

    <div class="form-group">
        <label for="releaseYear">Categoria</label>
        <Select @bind-Value="selectedCategoryId" @bind-Value:event="onchange" class="form-control" >
            <option value="">Select Category</option>
            @foreach (var category in categories)
            {
                <option value="@category.Id">@category.Name</option>
            }
        </Select>
    </div>

     <div class="form-group">
        <label for="actor">Select Actors</label>
        <select multiple class="form-control" id="actos" @onchange="ChangeActors" >
            @foreach (var actor in actors)
            {
                <option value="@actor.Id" selected="@currentMovie.hasActor(@actor.Id)" >
                    @actor.Name
                </option>
            }
        </select>
    </div>

    <button type="button" class="btn btn-primary" @onclick="SaveChanges">Guardar cambios</button>
    <a href="/movies">Cancelar</a>
</form>

@code {
    [Parameter]
    public int Id { get; set; }
    private Movie? currentMovie;
    private List<Category>? categories;
    private int selectedCategoryId;

    private List<Actor>? actors;
    private List<int> selectedActorIds = new List<int>();

    protected override void OnInitialized()
    {
        currentMovie = new Movie();
        currentMovie.ReleaseYear= DateTime.Now.Year;
        categories = MemoryDatabase.Categories;
        actors = MemoryDatabase.Actors;
    }

    private void SaveChanges()
    {
        MemoryDatabase.AddMovie(currentMovie);
        NavigationManager.NavigateTo("/movies");
    }

   
    private void OnSelectedCategoryChanged()
    {
        Category SelectedCategory = MemoryDatabase.FindCategory(selectedCategoryId);
        currentMovie.Category = SelectedCategory;
    }

    public void ChangeActors(ChangeEventArgs e)
    {
        var actorsIdsString = (string[])e.Value;
        var actors = new List<Actor>();
        foreach (var stringId in actorsIdsString)
        {
            var actor = MemoryDatabase.FindActor(int.Parse(stringId));
            actors.Add(actor);
        }
        currentMovie.Actors = actors;
    }
}